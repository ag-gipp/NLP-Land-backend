{
  "definitions": {
    "Affiliation": {
      "title": "Affiliation",
      "required": [
        "name",
        "country",
        "createdBy",
        "createdAt"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "city": {
          "type": "string"
        },
        "lat": {
          "type": "number"
        },
        "lng": {
          "type": "number"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "Author": {
      "title": "Author",
      "required": [
        "fullname",
        "email",
        "createdBy",
        "createdAt",
        "dblpId"
      ],
      "properties": {
        "fullname": {
          "type": "string"
        },
        "affiliations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "dblpId": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "Paper": {
      "title": "Paper",
      "required": [
        "title",
        "abstractText",
        "abstractExtractor",
        "typeOfPaper",
        "shortOrLong",
        "atMainConference",
        "isSharedTask",
        "isStudentPaper",
        "doi",
        "preProcessingGitHash",
        "pdfUrl",
        "absUrl",
        "datePublished",
        "citationInfoTimestamp",
        "createdBy",
        "createdAt",
        "dblpId"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "abstractText": {
          "type": "string"
        },
        "abstractExtractor": {
          "type": "string",
          "enum": [
            "grobid",
            "anthology",
            "rulebased"
          ]
        },
        "typeOfPaper": {
          "type": "string",
          "enum": [
            "journal",
            "conference",
            "demo",
            "workshop",
            "poster",
            "tutorial",
            "doctoralconsortium",
            "masterthesis",
            "phdthesis",
            "other"
          ]
        },
        "shortOrLong": {
          "type": "string",
          "enum": [
            "short",
            "long",
            "unknown"
          ]
        },
        "atMainConference": {
          "type": "boolean"
        },
        "isSharedTask": {
          "type": "boolean"
        },
        "isStudentPaper": {
          "type": "boolean"
        },
        "doi": {
          "type": "string"
        },
        "preProcessingGitHash": {
          "type": "string"
        },
        "pdfUrl": {
          "type": "string"
        },
        "absUrl": {
          "type": "string"
        },
        "datePublished": {
          "type": "string",
          "format": "date-time"
        },
        "citationInfoTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "cites": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firstAuthor": {
          "type": "string"
        },
        "venues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "dblpId": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "Venue": {
      "title": "Venue",
      "required": [
        "createdBy",
        "createdAt",
        "dblpId"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string",
            "required": true
          }
        },
        "acronyms": {
          "type": "array",
          "items": {
            "type": "string",
            "required": true
          }
        },
        "venueCodes": {
          "type": "array",
          "items": {
            "type": "string",
            "required": true
          }
        },
        "venueDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "callForPapersText": {
                "type": "string"
              },
              "timePublished": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": []
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "dblpId": {
          "type": "string"
        },
        "_id": {
          "type": "string"
        }
      }
    },
    "User": {
      "title": "User",
      "required": [
        "email",
        "password",
        "fullname"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "required": false
        },
        "isActive": {
          "type": "boolean",
          "required": false
        },
        "_id": {
          "type": "string"
        }
      }
    }
  },
  "info": {
    "title": "nlp-land-backend",
    "version": "0.9.0",
    "license": {
      "name": "MIT"
    },
    "description": "Specification JSONs: [v2](/api-spec/v2), [v3](/api-spec/v3).\n\nAPI server of the nlp-land project. This is the main part of storing data and accessing an external data analysis endpoint. It uses a mongoDB instance to store everything."
  },
  "paths": {
    "/api/v0/affiliations": {
      "get": {
        "summary": "/api/v0/affiliations",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {}
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/affiliations",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566748152507227505dc"
                },
                "name": {
                  "type": "string",
                  "example": "Google"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "city": {
                  "type": "string",
                  "example": "Mountain View"
                },
                "lat": {
                  "type": "number",
                  "example": 37.3861
                },
                "lng": {
                  "type": "number",
                  "example": 122.0839
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:35.513Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can create new affiliations using the affiliation API"
                }
              }
            }
          }
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/affiliations",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {}
        },
        "tags": [
          "Affiliation"
        ]
      }
    },
    "/api/v0/affiliations/count": {
      "get": {
        "summary": "/api/v0/affiliations/count",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/affiliations/{id}": {
      "get": {
        "summary": "/api/v0/affiliations/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566748152507227505c9"
                },
                "name": {
                  "type": "string",
                  "example": "Google"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "city": {
                  "type": "string",
                  "example": "Mountain View"
                },
                "lat": {
                  "type": "number",
                  "example": 37.3861
                },
                "lng": {
                  "type": "number",
                  "example": 122.0839
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:35.365Z"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "61b8566648152507227505af"
                    },
                    "email": {
                      "type": "string",
                      "example": "jpw@nlpland.com"
                    },
                    "fullname": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/affiliations/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Affiliation"
        ]
      },
      "put": {
        "summary": "/api/v0/affiliations/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Affiliation"
        ]
      },
      "patch": {
        "summary": "/api/v0/affiliations/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566748152507227505df"
                },
                "name": {
                  "type": "string",
                  "example": "New Name"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "city": {
                  "type": "string",
                  "example": "Mountain View"
                },
                "lat": {
                  "type": "number",
                  "example": 37.3861
                },
                "lng": {
                  "type": "number",
                  "example": 122.0839
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:35.539Z"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins or the user itself can update affiliation properties"
                }
              }
            }
          }
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/affiliations/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins and the creator can delete an affiliation"
                }
              }
            }
          }
        },
        "tags": [
          "Affiliation"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/affiliations/{id}/shallow": {
      "get": {
        "summary": "/api/v0/affiliations/{id}/shallow",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Affiliation"
        ]
      }
    },
    "/api/v0/authors": {
      "get": {
        "summary": "/api/v0/authors",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "affiliations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "fullname": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dblpId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {}
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/authors",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "affiliations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505a8"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b856684815250722750613"
                },
                "fullname": {
                  "type": "string",
                  "example": "Author Name"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.108Z"
                },
                "email": {
                  "type": "string",
                  "example": "test@test.net"
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:36.374Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can create new authors using the author API"
                }
              }
            }
          }
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/authors",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {}
        },
        "tags": [
          "Author"
        ]
      }
    },
    "/api/v0/authors/count": {
      "get": {
        "summary": "/api/v0/authors/count",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/authors/{id}": {
      "get": {
        "summary": "/api/v0/authors/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b856684815250722750600"
                },
                "affiliations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505a8"
                  ]
                },
                "fullname": {
                  "type": "string",
                  "example": "Author Name"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.108Z"
                },
                "email": {
                  "type": "string",
                  "example": "test@test.net"
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:36.235Z"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "61b8566648152507227505af"
                    },
                    "email": {
                      "type": "string",
                      "example": "jpw@nlpland.com"
                    },
                    "fullname": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/authors/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Author"
        ]
      },
      "put": {
        "summary": "/api/v0/authors/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Author"
        ]
      },
      "patch": {
        "summary": "/api/v0/authors/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "affiliations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505a8"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b856684815250722750616"
                },
                "fullname": {
                  "type": "string",
                  "example": "New Fullname"
                },
                "timestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.108Z"
                },
                "email": {
                  "type": "string",
                  "example": "test@test.net"
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:36.433Z"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins or the user itself can update author properties"
                }
              }
            }
          }
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/authors/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins and the creator can delete an author"
                }
              }
            }
          }
        },
        "tags": [
          "Author"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/authors/{id}/shallow": {
      "get": {
        "summary": "/api/v0/authors/{id}/shallow",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Author"
        ]
      }
    },
    "/api/v0/papers": {
      "get": {
        "summary": "/api/v0/papers",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "cites": {
                    "type": "array",
                    "items": {}
                  },
                  "authors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "venues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "type": "string"
                  },
                  "abstractText": {
                    "type": "string"
                  },
                  "abstractExtractor": {
                    "type": "string"
                  },
                  "typeOfPaper": {
                    "type": "string"
                  },
                  "shortOrLong": {
                    "type": "string"
                  },
                  "atMainConference": {
                    "type": "boolean"
                  },
                  "isSharedTask": {
                    "type": "boolean"
                  },
                  "isStudentPaper": {
                    "type": "boolean"
                  },
                  "doi": {
                    "type": "string"
                  },
                  "preProcessingGitHash": {
                    "type": "string"
                  },
                  "pdfUrl": {
                    "type": "string"
                  },
                  "absUrl": {
                    "type": "string"
                  },
                  "datePublished": {
                    "type": "string"
                  },
                  "citationInfoTimestamp": {
                    "type": "string"
                  },
                  "firstAuthor": {
                    "type": "string"
                  },
                  "dblpId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {}
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/papers",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "cites": {
                  "type": "array",
                  "items": {},
                  "example": [
                    null
                  ]
                },
                "authors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505aa"
                  ]
                },
                "venues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505ac"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b85669481525072275064a"
                },
                "title": {
                  "type": "string",
                  "example": "Some Paper Title"
                },
                "abstractText": {
                  "type": "string",
                  "example": "This paper is about a really interesting topic"
                },
                "abstractExtractor": {
                  "type": "string",
                  "example": "grobid"
                },
                "typeOfPaper": {
                  "type": "string",
                  "example": "conference"
                },
                "shortOrLong": {
                  "type": "string",
                  "example": "long"
                },
                "atMainConference": {
                  "type": "boolean",
                  "example": true
                },
                "isSharedTask": {
                  "type": "boolean",
                  "example": false
                },
                "isStudentPaper": {
                  "type": "boolean",
                  "example": false
                },
                "doi": {
                  "type": "string",
                  "example": "doi/1.23.123"
                },
                "preProcessingGitHash": {
                  "type": "string",
                  "example": "f8bdd1bcdcd8480439d28a38f2fb8c25e20d76c6"
                },
                "pdfUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/pdf.pdf"
                },
                "absUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/"
                },
                "datePublished": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "citationInfoTimestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "firstAuthor": {
                  "type": "string",
                  "example": "61b8566648152507227505ab"
                },
                "dblpId": {
                  "type": "string",
                  "example": "some-id-123"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:37.371Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can create new papers using the paper API"
                }
              }
            }
          }
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/papers",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {}
        },
        "tags": [
          "Paper"
        ]
      }
    },
    "/api/v0/papers/count": {
      "get": {
        "summary": "/api/v0/papers/count",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/papers/{id}": {
      "get": {
        "summary": "/api/v0/papers/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b856694815250722750637"
                },
                "cites": {
                  "type": "array",
                  "items": {},
                  "example": [
                    null
                  ]
                },
                "authors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505aa"
                  ]
                },
                "venues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505ac"
                  ]
                },
                "title": {
                  "type": "string",
                  "example": "Some Paper Title"
                },
                "abstractText": {
                  "type": "string",
                  "example": "This paper is about a really interesting topic"
                },
                "abstractExtractor": {
                  "type": "string",
                  "example": "grobid"
                },
                "typeOfPaper": {
                  "type": "string",
                  "example": "conference"
                },
                "shortOrLong": {
                  "type": "string",
                  "example": "long"
                },
                "atMainConference": {
                  "type": "boolean",
                  "example": true
                },
                "isSharedTask": {
                  "type": "boolean",
                  "example": false
                },
                "isStudentPaper": {
                  "type": "boolean",
                  "example": false
                },
                "doi": {
                  "type": "string",
                  "example": "doi/1.23.123"
                },
                "preProcessingGitHash": {
                  "type": "string",
                  "example": "f8bdd1bcdcd8480439d28a38f2fb8c25e20d76c6"
                },
                "pdfUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/pdf.pdf"
                },
                "absUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/"
                },
                "datePublished": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "citationInfoTimestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "firstAuthor": {
                  "type": "string",
                  "example": "61b8566648152507227505ab"
                },
                "dblpId": {
                  "type": "string",
                  "example": "some-id-123"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:37.199Z"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "61b8566648152507227505af"
                    },
                    "email": {
                      "type": "string",
                      "example": "jpw@nlpland.com"
                    },
                    "fullname": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/papers/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Paper"
        ]
      },
      "put": {
        "summary": "/api/v0/papers/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Paper"
        ]
      },
      "patch": {
        "summary": "/api/v0/papers/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "cites": {
                  "type": "array",
                  "items": {},
                  "example": [
                    null
                  ]
                },
                "authors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505aa"
                  ]
                },
                "venues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "61b8566648152507227505ac"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b85669481525072275064d"
                },
                "title": {
                  "type": "string",
                  "example": "A New Title"
                },
                "abstractText": {
                  "type": "string",
                  "example": "This paper is about a really interesting topic"
                },
                "abstractExtractor": {
                  "type": "string",
                  "example": "grobid"
                },
                "typeOfPaper": {
                  "type": "string",
                  "example": "conference"
                },
                "shortOrLong": {
                  "type": "string",
                  "example": "long"
                },
                "atMainConference": {
                  "type": "boolean",
                  "example": true
                },
                "isSharedTask": {
                  "type": "boolean",
                  "example": false
                },
                "isStudentPaper": {
                  "type": "boolean",
                  "example": false
                },
                "doi": {
                  "type": "string",
                  "example": "doi/1.23.123"
                },
                "preProcessingGitHash": {
                  "type": "string",
                  "example": "f8bdd1bcdcd8480439d28a38f2fb8c25e20d76c6"
                },
                "pdfUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/pdf.pdf"
                },
                "absUrl": {
                  "type": "string",
                  "example": "https://dummy-url.de/"
                },
                "datePublished": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "citationInfoTimestamp": {
                  "type": "string",
                  "example": "2021-12-14T08:31:34.251Z"
                },
                "firstAuthor": {
                  "type": "string",
                  "example": "61b8566648152507227505ab"
                },
                "dblpId": {
                  "type": "string",
                  "example": "some-id-123"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:37.436Z"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins or the user itself can update paper properties"
                }
              }
            }
          }
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/papers/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins and the creator can delete a paper"
                }
              }
            }
          }
        },
        "tags": [
          "Paper"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/papers/{id}/shallow": {
      "get": {
        "summary": "/api/v0/papers/{id}/shallow",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Paper"
        ]
      }
    },
    "/api/v0/venues": {
      "get": {
        "summary": "/api/v0/venues",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "names": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "acronyms": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "venueCodes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "venueDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "callForPapersText": {
                          "type": "string"
                        },
                        "timePublished": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "dblpId": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string"
                  },
                  "createdBy": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {}
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/venues",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Empirical Methods in Natural Language Processing"
                  ]
                },
                "acronyms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "EMNLP"
                  ]
                },
                "venueCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "A_N_Y_C_O_D_E"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b8566c48152507227506b1"
                },
                "venueDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "callForPapersText": {
                        "type": "string"
                      },
                      "timePublished": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    {
                      "_id": "61b8566c48152507227506b2",
                      "callForPapersText": "Test",
                      "timePublished": "2021-12-14T08:31:34.396Z"
                    }
                  ]
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:40.373Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can create new venues using the venues API"
                }
              }
            }
          }
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/venues",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {}
        },
        "tags": [
          "Venue"
        ]
      }
    },
    "/api/v0/venues/count": {
      "get": {
        "summary": "/api/v0/venues/count",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/venues/{id}": {
      "get": {
        "summary": "/api/v0/venues/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566c481525072275069a"
                },
                "names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Empirical Methods in Natural Language Processing"
                  ]
                },
                "acronyms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "EMNLP"
                  ]
                },
                "venueCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "A_N_Y_C_O_D_E"
                  ]
                },
                "venueDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "callForPapersText": {
                        "type": "string"
                      },
                      "timePublished": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    {
                      "_id": "61b8566c481525072275069b",
                      "callForPapersText": "Test",
                      "timePublished": "2021-12-14T08:31:34.396Z"
                    }
                  ]
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:40.132Z"
                },
                "createdBy": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "61b8566648152507227505af"
                    },
                    "email": {
                      "type": "string",
                      "example": "jpw@nlpland.com"
                    },
                    "fullname": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/venues/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Venue"
        ]
      },
      "put": {
        "summary": "/api/v0/venues/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Venue"
        ]
      },
      "patch": {
        "summary": "/api/v0/venues/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "names": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Empirical Methods in Natural Language Processing"
                  ]
                },
                "acronyms": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "NEWACRO"
                  ]
                },
                "venueCodes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "A_N_Y_C_O_D_E"
                  ]
                },
                "_id": {
                  "type": "string",
                  "example": "61b8566c48152507227506b5"
                },
                "venueDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "callForPapersText": {
                        "type": "string"
                      },
                      "timePublished": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    {
                      "_id": "61b8566c48152507227506b6",
                      "callForPapersText": "Test",
                      "timePublished": "2021-12-14T08:31:34.396Z"
                    }
                  ]
                },
                "dblpId": {
                  "type": "string",
                  "example": "something"
                },
                "createdAt": {
                  "type": "string",
                  "example": "2021-12-14T08:31:40.432Z"
                },
                "createdBy": {
                  "type": "string",
                  "example": "61b8566648152507227505af"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can update venues properties"
                }
              }
            }
          }
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/venues/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can delete a venue"
                }
              }
            }
          }
        },
        "tags": [
          "Venue"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/venues/{id}/shallow": {
      "get": {
        "summary": "/api/v0/venues/{id}/shallow",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "Venue"
        ]
      }
    },
    "/api/v0/users": {
      "get": {
        "summary": "/api/v0/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "fullname": {
                    "type": "string"
                  },
                  "__v": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "401": {}
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Users can only be created using the register API"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/users",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "401": {}
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/v0/users/count": {
      "get": {
        "summary": "/api/v0/users/count",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/users/{id}": {
      "get": {
        "summary": "/api/v0/users/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566648152507227505b5"
                },
                "fullname": {
                  "type": "string",
                  "example": "Your Name"
                },
                "email": {
                  "type": "string",
                  "example": "dummy@user.de"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/api/v0/users/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "/api/v0/users/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "User"
        ]
      },
      "patch": {
        "summary": "/api/v0/users/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566648152507227505b5"
                },
                "fullname": {
                  "type": "string",
                  "example": "Your Name"
                },
                "email": {
                  "type": "string",
                  "example": "new@email.de"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "401": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can change the isAdmin flag of a user"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "/api/v0/users/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Only admins can delete a user profile"
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/users/{id}/shallow": {
      "get": {
        "summary": "/api/v0/users/{id}/shallow",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": [
          "User"
        ]
      }
    },
    "/api/v0/register": {
      "post": {
        "summary": "/api/v0/register",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "61b8566648152507227505b5"
                },
                "fullname": {
                  "type": "string",
                  "example": "Your Name"
                },
                "email": {
                  "type": "string",
                  "example": "dummy@user.de"
                },
                "password": {
                  "type": "string",
                  "example": "******"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "properties": {
                        "password": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "ValidatorError"
                            },
                            "message": {
                              "type": "string",
                              "example": "Path `password` is required."
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Path `password` is required."
                                },
                                "type": {
                                  "type": "string",
                                  "example": "required"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "password"
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "required"
                            },
                            "path": {
                              "type": "string",
                              "example": "password"
                            }
                          }
                        },
                        "fullname": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "ValidatorError"
                            },
                            "message": {
                              "type": "string",
                              "example": "Path `fullname` is required."
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "message": {
                                  "type": "string",
                                  "example": "Path `fullname` is required."
                                },
                                "type": {
                                  "type": "string",
                                  "example": "required"
                                },
                                "path": {
                                  "type": "string",
                                  "example": "fullname"
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "required"
                            },
                            "path": {
                              "type": "string",
                              "example": "fullname"
                            }
                          }
                        }
                      }
                    },
                    "_message": {
                      "type": "string",
                      "example": "Validation failed"
                    },
                    "name": {
                      "type": "string",
                      "example": "ValidationError"
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation failed: password: Path `password` is required., fullname: Path `fullname` is required."
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User already exist. Please login."
                }
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/v0/login": {
      "post": {
        "summary": "/api/v0/login",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7Il9pZCI6IjYxYjg1NjY2NDgxNTI1MDcyMjc1MDVhZiIsImVtYWlsIjoianB3QG5scGxhbmQuY29tIn0sImlhdCI6MTYzOTQ3MDY5NH0.xoWbF42RzCrGgzKGwPSgSEype5RPwXZeGLMgkBnlQtk"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Wrong email or password."
                }
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "name": "Affiliation"
    },
    {
      "name": "Author"
    },
    {
      "name": "Paper"
    },
    {
      "name": "Venue"
    },
    {
      "name": "User"
    }
  ]
}